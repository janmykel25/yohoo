#include <iostream>
#include <fstream>
#include <cstring>
#include <cstdlib> // for exit() and system()

// Function to simulate setting file permissions in Windows
void setFilePermissions(const char* filename, int mode) {
    std::ifstream file(filename);

    if (!file) {
        std::cout << "Error setting file permissions: No such file directory" << std::endl;
    } else {
        // Simulate permissions based on mode (1 for read, 2 for write)
        if (mode == 1) {
            std::cout << filename << " permissions updated sucessfully. " << std::endl;
        } else if (mode == 2) {
            std::cout << filename << " permissions updated sucessfully. " << std::endl;
        }
    }

    file.close();
}

int main() {
    char filename[50];
    int choice;

    do {
        std::cout << "\t\tMAIN MENU OF PERMISSIONS\n";
        std::cout << "\t----------------------------------\n";
        std::cout << "1. Only Read\n";
        std::cout << "2. Only Write\n";
        std::cout << "3. Exit\n";
        std::cout << "Enter your choice: ";
        std::cin >> choice;

        // Clear the newline character left by std::cin >> choice
        std::cin.ignore();

        switch (choice) {
            case 1:
                std::cout << "Enter file name: ";
                std::cin.getline(filename, 50); // Use getline to handle spaces in filenames
                setFilePermissions(filename, 1); // Simulated read-only permission
                break;
            case 2:
                std::cout << "Enter file name: ";
                std::cin.getline(filename, 50); // Use getline to handle spaces in filenames
                setFilePermissions(filename, 2); // Simulated write-only permission
                break;
            case 3:
                std::cout << "Exiting program..." << std::endl;
                break;
            default:
                std::cout << "Invalid choice." << std::endl;
        }

    } while (choice != 3);

    // Use system("pause") to hold the console window open
    system("pause");
    return 0;
}
